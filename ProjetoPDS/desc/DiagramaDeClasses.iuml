@startuml "Diagrama de Classes"

    class Usuario{
        -nome: String
        -cpf: String
        -email: String
        -senha: String
        -telefone: String

        +criarUsuario(nome: String, cpf: String, email: String, senha: String, telefone: String): boolean
        +editarUsuario(cpf: String, item: String, valor: String): boolean
        +removerUsuario(cpf: String): boolean
        +buscarUsuario(cpf: String): Usuario
        +autenticarUsuario(email: String, senha: String): Usuario
    }

    class Funcionario{
        -idUsuario: int
    }

    Funcionario -right-|> Usuario

    class Jogo{
        -id: int
        -nome: String
        -genero: String
        -descricao: String
        -dataLancamento: Date
        -valor: float
        -desenvolvedora: String
        -quantConquistas: int
        -descontoElegivel: int

        +getDados(): Jogo
        +setDados(*args): Jogo
        +criarJogo(nome: String, genero: String, descricao: String, valor: float, desenvolvedora: String, quantConquistas: int, descontoElegivel: int): boolean
        +listarJogos(): Arraylist<Jogo>
        +listarJogos(genero: String): Arraylist<Jogo>
        +listarJogos(valor: float): Arraylist<Jogo>
        +editarJogo(id: int, item: String, valor: String): boolean
        +excluirJogo(idJogo: int): boolean
    }

    class Cupom{
        -id: int
        -idUsuario: int
        -desconto: int

        +criarCupom(jogoUsuario: JogoUsuario): boolean
        +calculaDesconto(jogoUsuario: JogoUsuario): int
        +checaDesconto(jogo: Jogo, cupom: Cupom): float
        +usarCumpom(jogo: Jogo, cupom: Cupom): boolean
    }

    Cupom -- JogoUsuario: gerencia >

    Funcionario -left-> Jogo: gerencia >

    Funcionario --> Cupom: gerencia >

    Usuario "1" -- "0..n" Cupom: possui >

    class JogoUsuario{
        -idUsuario: int
        -idJogo: int
        -quantObtidaConquistas: int
        -temCupom: boolean
    }

    Usuario "1" -- "0..n" JogoUsuario: possui >
    JogoUsuario "0..n" -- "1" Jogo

@enduml